{"version":3,"file":"chunks/79829.ddfa47f9e4a5dd37bfc3.min.js","mappings":"6PAaA,SAASA,EAAWC,EAAU,CAAC,GAC3B,OAAO,IAAI,KAAO,CACdC,KAAKC,GAAc,OAAO,IAAIC,EAAeD,EAAYF,EAAU,GAE3E,CACA,MAAMG,EACFC,YAAYF,EAAYF,GACpBK,KAAKH,WAAaA,EAClBG,KAAKC,UAAY,KACjBD,KAAKE,QAAU,KACfF,KAAKG,SAAW,EAChBH,KAAKI,MAAQT,EAAQS,OAAS,EAC9BJ,KAAKK,MAAQV,EAAQU,OAAS,QAC9BL,KAAKM,MAAQX,EAAQW,MACrBN,KAAKO,SAAW,CAAC,WAAY,UAAW,OAAQ,aAAaC,KAAIC,IAC7D,IAAIC,EAAWC,IAAQX,KAAKS,GAAME,EAAE,EAEpC,OADAd,EAAWe,IAAIC,iBAAiBJ,EAAMC,GAC/B,CAAED,OAAMC,UAAS,GAEhC,CACAI,UACId,KAAKO,SAASQ,SAAQ,EAAGN,OAAMC,aAAcV,KAAKH,WAAWe,IAAII,oBAAoBP,EAAMC,IAC/F,CACAO,OAAOpB,EAAYqB,GACO,MAAlBlB,KAAKC,WAAqBiB,EAAUC,KAAOtB,EAAWuB,MAAMD,MACxDnB,KAAKC,UAAYJ,EAAWuB,MAAMD,IAAIE,QAAQC,KAC9CtB,KAAKuB,UAAU,MAEfvB,KAAKwB,gBAEjB,CACAD,UAAUE,GACFA,GAAOzB,KAAKC,YAEhBD,KAAKC,UAAYwB,EACN,MAAPA,GACAzB,KAAKE,QAAQwB,WAAWC,YAAY3B,KAAKE,SACzCF,KAAKE,QAAU,MAGfF,KAAKwB,gBAEb,CACAA,gBACI,IAC0CI,EADtCC,EAAO7B,KAAKH,WAAWuB,MAAMD,IAAIW,QAAQ9B,KAAKC,WAC9C8B,GAAWF,EAAKG,OAAOC,cAC3B,GAAIF,EAAS,CACT,IAAIG,EAASL,EAAKM,WAAYC,EAAQP,EAAKQ,UAC3C,GAAIH,GAAUE,EAAO,CACjB,IAAIE,EAAOtC,KAAKH,WAAW0C,QAAQvC,KAAKC,WAAaiC,EAASA,EAAOM,SAAW,IAChF,GAAIF,EAAM,CACN,IAAIG,EAAWH,EAAKI,wBAChBC,EAAMT,EAASO,EAASG,OAASH,EAASE,IAC1CT,GAAUE,IACVO,GAAOA,EAAM3C,KAAKH,WAAW0C,QAAQvC,KAAKC,WAAWyC,wBAAwBC,KAAO,GACxFf,EAAO,CAAEiB,KAAMJ,EAASI,KAAMC,MAAOL,EAASK,MAAOH,IAAKA,EAAM3C,KAAKI,MAAQ,EAAGwC,OAAQD,EAAM3C,KAAKI,MAAQ,EAC/G,CACJ,CACJ,CACA,IAAKwB,EAAM,CACP,IAAImB,EAAS/C,KAAKH,WAAWmD,YAAYhD,KAAKC,WAC9C2B,EAAO,CAAEiB,KAAME,EAAOF,KAAO7C,KAAKI,MAAQ,EAAG0C,MAAOC,EAAOF,KAAO7C,KAAKI,MAAQ,EAAGuC,IAAKI,EAAOJ,IAAKC,OAAQG,EAAOH,OACtH,CACA,IASIK,EAAYC,EATZlB,EAAShC,KAAKH,WAAWe,IAAIuC,aAUjC,GATKnD,KAAKE,UACNF,KAAKE,QAAU8B,EAAOoB,YAAYC,SAASC,cAAc,QACrDtD,KAAKM,QACLN,KAAKE,QAAQqD,UAAYvD,KAAKM,OAClCN,KAAKE,QAAQsD,MAAMC,QAAU,4EAA8EzD,KAAKK,OAEpHL,KAAKE,QAAQwD,UAAUC,OAAO,+BAAgC5B,GAC9D/B,KAAKE,QAAQwD,UAAUC,OAAO,iCAAkC5B,IAE3DC,GAAUA,GAAUqB,SAASO,MAA6C,UAArCC,iBAAiB7B,GAAQ8B,SAC/Db,GAAcc,YACdb,GAAac,gBAEZ,CACD,IAAIpC,EAAOI,EAAOU,wBAClBO,EAAarB,EAAKiB,KAAOb,EAAOiC,WAChCf,EAAYtB,EAAKe,IAAMX,EAAOkC,SAClC,CACAlE,KAAKE,QAAQsD,MAAMX,KAAQjB,EAAKiB,KAAOI,EAAc,KACrDjD,KAAKE,QAAQsD,MAAMb,IAAOf,EAAKe,IAAMO,EAAa,KAClDlD,KAAKE,QAAQsD,MAAMpD,MAASwB,EAAKkB,MAAQlB,EAAKiB,KAAQ,KACtD7C,KAAKE,QAAQsD,MAAMW,OAAUvC,EAAKgB,OAAShB,EAAKe,IAAO,IAC3D,CACAyB,gBAAgBjE,GACZkE,aAAarE,KAAKG,SAClBH,KAAKG,QAAUmE,YAAW,IAAMtE,KAAKuB,UAAU,OAAOpB,EAC1D,CACAoE,SAASC,GACL,IAAKxE,KAAKH,WAAW4E,SACjB,OACJ,IAAIhD,EAAMzB,KAAKH,WAAW6E,YAAY,CAAE7B,KAAM2B,EAAMG,QAAShC,IAAK6B,EAAMI,UACpEtC,EAAOb,GAAOA,EAAIoD,QAAU,GAAK7E,KAAKH,WAAWuB,MAAMD,IAAI2D,OAAOrD,EAAIoD,QACtEE,EAAoBzC,GAAQA,EAAK0C,KAAKC,KAAKF,kBAC3CG,EAAuC,mBAArBH,EAAkCA,EAAkB/E,KAAKH,WAAY4B,EAAK+C,GAASO,EACzG,GAAItD,IAAQyD,EAAU,CAClB,IAAIC,EAAS1D,EAAIA,IACjB,GAAIzB,KAAKH,WAAWuF,UAAYpF,KAAKH,WAAWuF,SAASC,QACrDF,GAAS,QAAUnF,KAAKH,WAAWuB,MAAMD,IAAKgE,EAAQnF,KAAKH,WAAWuF,SAASC,OACjE,MAAVF,GACA,OAAOnF,KAAKuB,UAAU,MAE9BvB,KAAKuB,UAAU4D,GACfnF,KAAKoE,gBAAgB,IACzB,CACJ,CACAkB,UACItF,KAAKoE,gBAAgB,GACzB,CACAmB,OACIvF,KAAKoE,gBAAgB,GACzB,CACAoB,UAAUhB,GACFA,EAAMW,QAAUnF,KAAKH,WAAWe,KAAQZ,KAAKH,WAAWe,IAAI6E,SAASjB,EAAMkB,gBAC3E1F,KAAKuB,UAAU,KACvB,EChIJ,MAAMoE,EAAa,EAAAC,UAAA,OAAiB,CAChCnF,KAAM,aACNoF,aACI,MAAO,CACHxF,MAAO,eACPD,MAAO,EACPE,WAAOwF,EAEf,EACAC,wBACI,MAAO,CACHrG,EAAWM,KAAKL,SAExB,G","sources":["webpack://@patternslib/patternslib/./node_modules/prosemirror-dropcursor/dist/index.js","webpack://@patternslib/patternslib/./node_modules/@tiptap/extension-dropcursor/dist/index.js"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n    return new Plugin({\n        view(editorView) { return new DropCursorView(editorView, options); }\n    });\n}\nclass DropCursorView {\n    constructor(editorView, options) {\n        this.editorView = editorView;\n        this.cursorPos = null;\n        this.element = null;\n        this.timeout = -1;\n        this.width = options.width || 1;\n        this.color = options.color || \"black\";\n        this.class = options.class;\n        this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n            let handler = (e) => { this[name](e); };\n            editorView.dom.addEventListener(name, handler);\n            return { name, handler };\n        });\n    }\n    destroy() {\n        this.handlers.forEach(({ name, handler }) => this.editorView.dom.removeEventListener(name, handler));\n    }\n    update(editorView, prevState) {\n        if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n            if (this.cursorPos > editorView.state.doc.content.size)\n                this.setCursor(null);\n            else\n                this.updateOverlay();\n        }\n    }\n    setCursor(pos) {\n        if (pos == this.cursorPos)\n            return;\n        this.cursorPos = pos;\n        if (pos == null) {\n            this.element.parentNode.removeChild(this.element);\n            this.element = null;\n        }\n        else {\n            this.updateOverlay();\n        }\n    }\n    updateOverlay() {\n        let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n        let isBlock = !$pos.parent.inlineContent, rect;\n        if (isBlock) {\n            let before = $pos.nodeBefore, after = $pos.nodeAfter;\n            if (before || after) {\n                let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n                if (node) {\n                    let nodeRect = node.getBoundingClientRect();\n                    let top = before ? nodeRect.bottom : nodeRect.top;\n                    if (before && after)\n                        top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n                    rect = { left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2 };\n                }\n            }\n        }\n        if (!rect) {\n            let coords = this.editorView.coordsAtPos(this.cursorPos);\n            rect = { left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom };\n        }\n        let parent = this.editorView.dom.offsetParent;\n        if (!this.element) {\n            this.element = parent.appendChild(document.createElement(\"div\"));\n            if (this.class)\n                this.element.className = this.class;\n            this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n        }\n        this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n        this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n        let parentLeft, parentTop;\n        if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n            parentLeft = -pageXOffset;\n            parentTop = -pageYOffset;\n        }\n        else {\n            let rect = parent.getBoundingClientRect();\n            parentLeft = rect.left - parent.scrollLeft;\n            parentTop = rect.top - parent.scrollTop;\n        }\n        this.element.style.left = (rect.left - parentLeft) + \"px\";\n        this.element.style.top = (rect.top - parentTop) + \"px\";\n        this.element.style.width = (rect.right - rect.left) + \"px\";\n        this.element.style.height = (rect.bottom - rect.top) + \"px\";\n    }\n    scheduleRemoval(timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setCursor(null), timeout);\n    }\n    dragover(event) {\n        if (!this.editorView.editable)\n            return;\n        let pos = this.editorView.posAtCoords({ left: event.clientX, top: event.clientY });\n        let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n        let disableDropCursor = node && node.type.spec.disableDropCursor;\n        let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n        if (pos && !disabled) {\n            let target = pos.pos;\n            if (this.editorView.dragging && this.editorView.dragging.slice) {\n                target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n                if (target == null)\n                    return this.setCursor(null);\n            }\n            this.setCursor(target);\n            this.scheduleRemoval(5000);\n        }\n    }\n    dragend() {\n        this.scheduleRemoval(20);\n    }\n    drop() {\n        this.scheduleRemoval(20);\n    }\n    dragleave(event) {\n        if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n            this.setCursor(null);\n    }\n}\n\nexport { dropCursor };\n","import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\nconst Dropcursor = Extension.create({\r\n    name: 'dropCursor',\r\n    addOptions() {\r\n        return {\r\n            color: 'currentColor',\r\n            width: 1,\r\n            class: undefined,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        return [\r\n            dropCursor(this.options),\r\n        ];\r\n    },\r\n});\n\nexport { Dropcursor, Dropcursor as default };\n//# sourceMappingURL=index.js.map\n"],"names":["dropCursor","options","view","editorView","DropCursorView","constructor","this","cursorPos","element","timeout","width","color","class","handlers","map","name","handler","e","dom","addEventListener","destroy","forEach","removeEventListener","update","prevState","doc","state","content","size","setCursor","updateOverlay","pos","parentNode","removeChild","rect","$pos","resolve","isBlock","parent","inlineContent","before","nodeBefore","after","nodeAfter","node","nodeDOM","nodeSize","nodeRect","getBoundingClientRect","top","bottom","left","right","coords","coordsAtPos","parentLeft","parentTop","offsetParent","appendChild","document","createElement","className","style","cssText","classList","toggle","body","getComputedStyle","position","pageXOffset","pageYOffset","scrollLeft","scrollTop","height","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","inside","nodeAt","disableDropCursor","type","spec","disabled","target","dragging","slice","dragend","drop","dragleave","contains","relatedTarget","Dropcursor","Extension","addOptions","undefined","addProseMirrorPlugins"],"sourceRoot":""}